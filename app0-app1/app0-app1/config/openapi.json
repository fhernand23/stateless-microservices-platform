{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0",
    "title": "App0 App1",
    "description": "App0 App1"
  },
  "paths": {
    "/api/platform-auth/1x0/login": {
      "get": {
        "summary": "Auth: Login",
        "description": "Handles users login using basic-auth\nand generate access tokens for external services invoking apps\nplugged in with basic-auth plugin.",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Authentication information to be used for further API calls",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthInfo"
                }
              }
            }
          },
          "401": {
            "description": "Login failed, invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInfo"
                }
              }
            }
          }
        },
        "tags": [
          "platform_auth.1x0"
        ],
        "security": [
          {
            "auth.basic": []
          }
        ]
      }
    },
    "/api/platform-auth/1x0/refresh": {
      "get": {
        "summary": "Auth: Refresh",
        "description": "This event can be used for obtain new access token and update refresh token (http cookie),\nwith no need to re-login the user if there is a valid refresh token active.",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Refreshed authentication information to be used for further API calls",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthInfo"
                }
              }
            }
          },
          "401": {
            "description": "Login failed, invalid credentials. An http-cookie is expected",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInfo"
                }
              }
            }
          }
        },
        "tags": [
          "platform_auth.1x0"
        ],
        "security": [
          {
            "platform_auth.1x0.refresh": []
          }
        ]
      }
    },
    "/api/platform-auth/1x0/authorize": {
      "get": {
        "summary": "Auth: Authorize",
        "description": "This event can be used for obtain new access token and update refresh token (http cookie),\nrelated to enviroment with no need to re-login the user if there is a valid refresh token active.",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Refreshed authentication information to be used for further API calls",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthInfo"
                }
              }
            }
          },
          "401": {
            "description": "Login failed, invalid credentials. An http-cookie is expected",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInfo"
                }
              }
            }
          }
        },
        "tags": [
          "platform_auth.1x0"
        ],
        "security": [
          {
            "platform_auth.1x0.refresh": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/enum-list": {
      "get": {
        "summary": "App0Att: enum-list",
        "description": "App0Att: enum-list",
        "parameters": [
          {
            "name": "list_type",
            "in": "query",
            "required": true,
            "description": "List type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Dicts with info",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/auth-company-get": {
      "get": {
        "summary": "App0Att Company: auth-company-get",
        "description": "App0Att Company: auth-company-get",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Company",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.auth_company_get"
                  ],
                  "properties": {
                    "api.auth_company_get": {
                      "type": "string"
                    }
                  },
                  "description": "api.auth_company_get string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/auth-company-save": {
      "post": {
        "summary": "App0Att Company: auth-company-save",
        "description": "App0Att Company: auth-company-save",
        "parameters": [
          {
            "name": "action",
            "in": "query",
            "required": false,
            "description": "Apply some action",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "Company Info",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Company"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Company updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "400": {
            "description": "Request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.auth_company_save"
                  ],
                  "properties": {
                    "api.auth_company_save": {
                      "type": "string"
                    }
                  },
                  "description": "api.auth_company_save string payload"
                }
              }
            }
          },
          "403": {
            "description": "Operation forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.auth_company_save"
                  ],
                  "properties": {
                    "api.auth_company_save": {
                      "type": "string"
                    }
                  },
                  "description": "api.auth_company_save string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/auth-company-data": {
      "post": {
        "summary": "App0Att Company: auth-company-data",
        "description": "App0Att Company: auth-company-data",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "description": "Category of data to get",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "Filters to search",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Dict with info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.auth_company_data"
                  ],
                  "properties": {
                    "api.auth_company_data": {
                      "type": "string"
                    }
                  },
                  "description": "api.auth_company_data string payload"
                }
              }
            }
          },
          "403": {
            "description": "Operation forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.auth_company_data"
                  ],
                  "properties": {
                    "api.auth_company_data": {
                      "type": "string"
                    }
                  },
                  "description": "api.auth_company_data string payload"
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.auth_company_data"
                  ],
                  "properties": {
                    "api.auth_company_data": {
                      "type": "string"
                    }
                  },
                  "description": "api.auth_company_data string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/auth-company-config-get": {
      "get": {
        "summary": "App0Att Company Config: auth-company-config-get",
        "description": "App0Att Company Config: auth-company-config-get",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CompanyConfig",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyConfig"
                }
              }
            }
          },
          "403": {
            "description": "Operation forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.auth_company_config_get"
                  ],
                  "properties": {
                    "api.auth_company_config_get": {
                      "type": "string"
                    }
                  },
                  "description": "api.auth_company_config_get string payload"
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.auth_company_config_get"
                  ],
                  "properties": {
                    "api.auth_company_config_get": {
                      "type": "string"
                    }
                  },
                  "description": "api.auth_company_config_get string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/auth-company-config-save": {
      "post": {
        "summary": "App0Att Company Config: auth-company-config-save",
        "description": "App0Att Company Config: auth-company-config-save",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "Object Info",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Object updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyConfig"
                }
              }
            }
          },
          "403": {
            "description": "Operation forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.auth_company_config_save"
                  ],
                  "properties": {
                    "api.auth_company_config_save": {
                      "type": "string"
                    }
                  },
                  "description": "api.auth_company_config_save string payload"
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.auth_company_config_save"
                  ],
                  "properties": {
                    "api.auth_company_config_save": {
                      "type": "string"
                    }
                  },
                  "description": "api.auth_company_config_save string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/auth-subscription-get": {
      "get": {
        "summary": "App0Att Subscriptions: auth-subscription-get",
        "description": "App0Att Subscriptions: auth-subscription-get",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "403": {
            "description": "Operation forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.auth_subscription_get"
                  ],
                  "properties": {
                    "api.auth_subscription_get": {
                      "type": "string"
                    }
                  },
                  "description": "api.auth_subscription_get string payload"
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.auth_subscription_get"
                  ],
                  "properties": {
                    "api.auth_subscription_get": {
                      "type": "string"
                    }
                  },
                  "description": "api.auth_subscription_get string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/auth-subscription-save": {
      "post": {
        "summary": "App0Att Subscriptions: auth-subscription-save",
        "description": "App0Att Subscriptions: auth-subscription-save",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "Object Info",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Object updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "403": {
            "description": "Operation forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.auth_subscription_save"
                  ],
                  "properties": {
                    "api.auth_subscription_save": {
                      "type": "string"
                    }
                  },
                  "description": "api.auth_subscription_save string payload"
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.auth_subscription_save"
                  ],
                  "properties": {
                    "api.auth_subscription_save": {
                      "type": "string"
                    }
                  },
                  "description": "api.auth_subscription_save string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/auth-company-claim-requirements": {
      "get": {
        "summary": "App0Att Company Claim Requirements: auth-company-claim-requirements",
        "description": "App0Att Company Claim Requirements: auth-company-claim-requirements",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CompanyConfig",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OpenClaimRequirement"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/auth-user-set-image": {
      "get": {
        "summary": "App0Att Company: auth-user-set-image",
        "description": "App0Att Company: auth-user-set-image",
        "parameters": [
          {
            "name": "image",
            "in": "query",
            "required": true,
            "description": "Images to set",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.auth_user_set_image"
                  ],
                  "properties": {
                    "api.auth_user_set_image": {
                      "type": "string"
                    }
                  },
                  "description": "api.auth_user_set_image string payload"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.auth_user_set_image"
                  ],
                  "properties": {
                    "api.auth_user_set_image": {
                      "type": "string"
                    }
                  },
                  "description": "api.auth_user_set_image string payload"
                }
              }
            }
          },
          "403": {
            "description": "Operation forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.auth_user_set_image"
                  ],
                  "properties": {
                    "api.auth_user_set_image": {
                      "type": "string"
                    }
                  },
                  "description": "api.auth_user_set_image string payload"
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.auth_user_set_image"
                  ],
                  "properties": {
                    "api.auth_user_set_image": {
                      "type": "string"
                    }
                  },
                  "description": "api.auth_user_set_image string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/claim-get": {
      "get": {
        "summary": "App0Att App0: claim-get",
        "description": "App0Att App0: claim-get",
        "parameters": [
          {
            "name": "obj_id",
            "in": "query",
            "required": true,
            "description": "Object ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Claim"
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.claim_get"
                  ],
                  "properties": {
                    "api.claim_get": {
                      "type": "string"
                    }
                  },
                  "description": "api.claim_get string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/claim-list": {
      "post": {
        "summary": "App0Att App0: claim-list",
        "description": "App0Att App0: claim-list",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "Filters to search",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResults"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/claim-save": {
      "post": {
        "summary": "App0Att App0: claim-save",
        "description": "App0Att App0: claim-save",
        "parameters": [
          {
            "name": "action",
            "in": "query",
            "required": false,
            "description": "Apply workflow action",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "Object Info",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Claim"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Object updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Claim"
                }
              }
            }
          },
          "403": {
            "description": "Operation forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.claim_save"
                  ],
                  "properties": {
                    "api.claim_save": {
                      "type": "string"
                    }
                  },
                  "description": "api.claim_save string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/claim-data": {
      "post": {
        "summary": "App0Att App0: claim-data",
        "description": "App0Att App0: claim-data",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "required": true,
            "description": "Company Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "employee_id",
            "in": "query",
            "required": true,
            "description": "Employee Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "description": "Category of data to get",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "Filters to search",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Dict with info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dto"
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.claim_data"
                  ],
                  "properties": {
                    "api.claim_data": {
                      "type": "string"
                    }
                  },
                  "description": "api.claim_data string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/claim-file-upload": {
      "post": {
        "summary": "App0Att App0: claim-file-upload",
        "description": "App0Att App0: claim-file-upload",
        "parameters": [
          {
            "name": "claim_id",
            "in": "query",
            "required": true,
            "description": "Claim id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "description": "Tag",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "attachment"
                ],
                "properties": {
                  "attachment": {
                    "type": "string",
                    "format": "binary",
                    "description": "attachment"
                  }
                }
              },
              "encoding": {
                "attachment": {
                  "contentType": "application/octect-stream"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Uploaded file info embedded in notification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpRespInfo"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/client-get": {
      "get": {
        "summary": "App0Att Clients: client-get",
        "description": "App0Att Clients: client-get",
        "parameters": [
          {
            "name": "obj_id",
            "in": "query",
            "required": true,
            "description": "Object ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "403": {
            "description": "Operation forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpRespInfo"
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpRespInfo"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/client-list": {
      "post": {
        "summary": "App0Att Clients: client-list",
        "description": "App0Att Clients: client-list",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "Filters to search",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResults"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.client_list"
                  ],
                  "properties": {
                    "api.client_list": {
                      "type": "string"
                    }
                  },
                  "description": "api.client_list string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/client-save": {
      "post": {
        "summary": "App0Att Clients: client-save",
        "description": "App0Att Clients: client-save",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "Object Info",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Client"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Object updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "403": {
            "description": "Operation forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.client_save"
                  ],
                  "properties": {
                    "api.client_save": {
                      "type": "string"
                    }
                  },
                  "description": "api.client_save string payload"
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.client_save"
                  ],
                  "properties": {
                    "api.client_save": {
                      "type": "string"
                    }
                  },
                  "description": "api.client_save string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/client-file-upload": {
      "post": {
        "summary": "App0Att Clients: client-file-upload",
        "description": "App0Att Clients: client-file-upload",
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "description": "Client id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "description": "Tag",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "attachment"
                ],
                "properties": {
                  "attachment": {
                    "type": "string",
                    "format": "binary",
                    "description": "attachment"
                  }
                }
              },
              "encoding": {
                "attachment": {
                  "contentType": "application/octect-stream"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Uploaded file info embedded in notification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpRespInfo"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/client-file-get": {
      "get": {
        "summary": "App0Att: client-file-get",
        "description": "App0Att: client-file-get",
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "description": "Client Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "doc_id",
            "in": "query",
            "required": true,
            "description": "Resource filename",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File contents",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.client_file_get"
                  ],
                  "properties": {
                    "api.client_file_get": {
                      "type": "string"
                    }
                  },
                  "description": "api.client_file_get string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/damage-get": {
      "get": {
        "summary": "App0Att Damage: damage-get",
        "description": "App0Att Damage: damage-get",
        "parameters": [
          {
            "name": "obj_id",
            "in": "query",
            "required": true,
            "description": "Object ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Damage"
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.damage_get"
                  ],
                  "properties": {
                    "api.damage_get": {
                      "type": "string"
                    }
                  },
                  "description": "api.damage_get string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/damage-list": {
      "post": {
        "summary": "App0Att Damage: damage-list",
        "description": "App0Att Damage: damage-list",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "Filters to search",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResults"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/damage-save": {
      "post": {
        "summary": "App0Att Damage: damage-save",
        "description": "App0Att Damage: damage-save",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "Object Info",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Damage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Object updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Damage"
                }
              }
            }
          },
          "403": {
            "description": "Operation forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.damage_save"
                  ],
                  "properties": {
                    "api.damage_save": {
                      "type": "string"
                    }
                  },
                  "description": "api.damage_save string payload"
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.damage_save"
                  ],
                  "properties": {
                    "api.damage_save": {
                      "type": "string"
                    }
                  },
                  "description": "api.damage_save string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/employee-get": {
      "get": {
        "summary": "App0Att Employee: employee-get",
        "description": "App0Att Employee: employee-get",
        "parameters": [
          {
            "name": "obj_id",
            "in": "query",
            "required": true,
            "description": "Object ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpRespInfo"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/employee-list": {
      "post": {
        "summary": "App0Att Employee: employee-list",
        "description": "App0Att Employee: employee-list",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "Filters to search",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResults"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/employee-save": {
      "post": {
        "summary": "App0Att Employee: employee-save",
        "description": "App0Att Employee: employee-save",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "Object Info",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Object updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "403": {
            "description": "Operation forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.employee_save"
                  ],
                  "properties": {
                    "api.employee_save": {
                      "type": "string"
                    }
                  },
                  "description": "api.employee_save string payload"
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.employee_save"
                  ],
                  "properties": {
                    "api.employee_save": {
                      "type": "string"
                    }
                  },
                  "description": "api.employee_save string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/employee-create": {
      "post": {
        "summary": "App0Att Employee: employee-create",
        "description": "App0Att Employee: employee-create",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "Object Info",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Object updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "403": {
            "description": "Operation forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.employee_create"
                  ],
                  "properties": {
                    "api.employee_create": {
                      "type": "string"
                    }
                  },
                  "description": "api.employee_create string payload"
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.employee_create"
                  ],
                  "properties": {
                    "api.employee_create": {
                      "type": "string"
                    }
                  },
                  "description": "api.employee_create string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/employee-data": {
      "post": {
        "summary": "App0Att Employee: employee-data",
        "description": "App0Att Employee: employee-data",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "required": true,
            "description": "Company Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "employee_id",
            "in": "query",
            "required": true,
            "description": "Employee Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "description": "Category of data to get",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "Filters to search",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Dict with info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dto"
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.employee_data"
                  ],
                  "properties": {
                    "api.employee_data": {
                      "type": "string"
                    }
                  },
                  "description": "api.employee_data string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/employee-file-upload": {
      "post": {
        "summary": "App0Att Employee: employee-file-upload",
        "description": "App0Att Employee: employee-file-upload",
        "parameters": [
          {
            "name": "employee_id",
            "in": "query",
            "required": true,
            "description": "Employee id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "description": "Tag",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "attachment"
                ],
                "properties": {
                  "attachment": {
                    "type": "string",
                    "format": "binary",
                    "description": "attachment"
                  }
                }
              },
              "encoding": {
                "attachment": {
                  "contentType": "application/octect-stream"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Uploaded file info embedded in notification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpRespInfo"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/employee-file-get": {
      "get": {
        "summary": "App0Att: client-file-get",
        "description": "App0Att: client-file-get",
        "parameters": [
          {
            "name": "employee_id",
            "in": "query",
            "required": true,
            "description": "Employee id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "doc_id",
            "in": "query",
            "required": true,
            "description": "Resource filename",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File contents",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.employee_file_get"
                  ],
                  "properties": {
                    "api.employee_file_get": {
                      "type": "string"
                    }
                  },
                  "description": "api.employee_file_get string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/insurance-get": {
      "get": {
        "summary": "App0Att Insurance Company: insurance-get",
        "description": "App0Att Insurance Company: insurance-get",
        "parameters": [
          {
            "name": "obj_id",
            "in": "query",
            "required": true,
            "description": "Object ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsuranceCompany"
                }
              }
            }
          },
          "403": {
            "description": "Operation forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.insurance_get"
                  ],
                  "properties": {
                    "api.insurance_get": {
                      "type": "string"
                    }
                  },
                  "description": "api.insurance_get string payload"
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.insurance_get"
                  ],
                  "properties": {
                    "api.insurance_get": {
                      "type": "string"
                    }
                  },
                  "description": "api.insurance_get string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/insurance-list": {
      "post": {
        "summary": "App0Att Insurance Company: insurance-list",
        "description": "App0Att Insurance Company: insurance-list",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "Filters to search",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResults"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/insurance-save": {
      "post": {
        "summary": "App0Att Insurance Company: insurance-save",
        "description": "App0Att Insurance Company: insurance-save",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "Object Info",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InsuranceCompany"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Object updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsuranceCompany"
                }
              }
            }
          },
          "403": {
            "description": "Operation forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.insurance_save"
                  ],
                  "properties": {
                    "api.insurance_save": {
                      "type": "string"
                    }
                  },
                  "description": "api.insurance_save string payload"
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.insurance_save"
                  ],
                  "properties": {
                    "api.insurance_save": {
                      "type": "string"
                    }
                  },
                  "description": "api.insurance_save string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/provider-get": {
      "get": {
        "summary": "App0Att Provider: provider-get",
        "description": "App0Att Provider: provider-get",
        "parameters": [
          {
            "name": "obj_id",
            "in": "query",
            "required": true,
            "description": "Object ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provider"
                }
              }
            }
          },
          "403": {
            "description": "Operation forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.provider_get"
                  ],
                  "properties": {
                    "api.provider_get": {
                      "type": "string"
                    }
                  },
                  "description": "api.provider_get string payload"
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.provider_get"
                  ],
                  "properties": {
                    "api.provider_get": {
                      "type": "string"
                    }
                  },
                  "description": "api.provider_get string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/provider-list": {
      "post": {
        "summary": "App0Att Provider: provider-list",
        "description": "App0Att Provider: provider-list",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "Filters to search",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResults"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/provider-save": {
      "post": {
        "summary": "App0Att Provider: provider-save",
        "description": "App0Att Provider: provider-save",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "Object Info",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Provider"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Object updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provider"
                }
              }
            }
          },
          "403": {
            "description": "Operation forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpRespInfo"
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpRespInfo"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/provider-file-upload": {
      "post": {
        "summary": "App0Att Provider: provider-file-upload",
        "description": "App0Att Provider: provider-file-upload",
        "parameters": [
          {
            "name": "provider_id",
            "in": "query",
            "required": true,
            "description": "Service Provider id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "description": "Tag",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "attachment"
                ],
                "properties": {
                  "attachment": {
                    "type": "string",
                    "format": "binary",
                    "description": "attachment"
                  }
                }
              },
              "encoding": {
                "attachment": {
                  "contentType": "application/octect-stream"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Uploaded file info embedded in notification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpRespInfo"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/provider-file-get": {
      "get": {
        "summary": "App0Att Provider: provider-file-get",
        "description": "App0Att Provider: provider-file-get",
        "parameters": [
          {
            "name": "provider_id",
            "in": "query",
            "required": true,
            "description": "Service Provider id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "doc_id",
            "in": "query",
            "required": true,
            "description": "Resource filename",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File contents",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.provider_file_get"
                  ],
                  "properties": {
                    "api.provider_file_get": {
                      "type": "string"
                    }
                  },
                  "description": "api.provider_file_get string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/claim-file-get": {
      "get": {
        "summary": "App0Att: claim-file-get",
        "description": "App0Att: claim-file-get",
        "parameters": [
          {
            "name": "claim_id",
            "in": "query",
            "required": true,
            "description": "Claim Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "doc_id",
            "in": "query",
            "required": true,
            "description": "Resource filename",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File contents",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.claim_file_get"
                  ],
                  "properties": {
                    "api.claim_file_get": {
                      "type": "string"
                    }
                  },
                  "description": "api.claim_file_get string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/insurance-employee-get": {
      "get": {
        "summary": "App0Att Insurance Employee: insurance-employee-get",
        "description": "App0Att Insurance Employee: insurance-employee-get",
        "parameters": [
          {
            "name": "obj_id",
            "in": "query",
            "required": true,
            "description": "Object ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsuranceEmployee"
                }
              }
            }
          },
          "403": {
            "description": "Operation forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.insurance_employee_get"
                  ],
                  "properties": {
                    "api.insurance_employee_get": {
                      "type": "string"
                    }
                  },
                  "description": "api.insurance_employee_get string payload"
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.insurance_employee_get"
                  ],
                  "properties": {
                    "api.insurance_employee_get": {
                      "type": "string"
                    }
                  },
                  "description": "api.insurance_employee_get string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/insurance-employee-list": {
      "post": {
        "summary": "App0Att Insurance Employee: insurance-employee-list",
        "description": "App0Att Insurance Employee: insurance-employee-list",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "Filters to search",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResults"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/insurance-employee-save": {
      "post": {
        "summary": "App0Att Insurance Employee: insurance-employee-save",
        "description": "App0Att Insurance Employee: insurance-employee-save",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "Object Info",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InsuranceEmployee"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Object updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsuranceEmployee"
                }
              }
            }
          },
          "403": {
            "description": "Operation forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.insurance_employee_save"
                  ],
                  "properties": {
                    "api.insurance_employee_save": {
                      "type": "string"
                    }
                  },
                  "description": "api.insurance_employee_save string payload"
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.insurance_employee_save"
                  ],
                  "properties": {
                    "api.insurance_employee_save": {
                      "type": "string"
                    }
                  },
                  "description": "api.insurance_employee_save string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/tmail-save": {
      "post": {
        "summary": "App0Att Tmails: tmail-save",
        "description": "App0Att Tmails: tmail-save",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "Object Info",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tmail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Object updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tmail"
                }
              }
            }
          },
          "403": {
            "description": "Operation forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpRespInfo"
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpRespInfo"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/tmail-get": {
      "get": {
        "summary": "App0Att Tmails: tmail-get",
        "description": "App0Att Tmails: tmail-get",
        "parameters": [
          {
            "name": "obj_id",
            "in": "query",
            "required": true,
            "description": "Object ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tmail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tmail"
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.tmail_get"
                  ],
                  "properties": {
                    "api.tmail_get": {
                      "type": "string"
                    }
                  },
                  "description": "api.tmail_get string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/tmail-list": {
      "post": {
        "summary": "App0Att Tmails: tmail-list",
        "description": "App0Att Tmails: tmail-list",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "Filters to search",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResults"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/token-claim-get": {
      "get": {
        "summary": "App0Att App0: token-claim-get",
        "description": "App0Att App0: token-claim-get",
        "parameters": [
          {
            "name": "token_id",
            "in": "query",
            "required": true,
            "description": "Token ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object associated to token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Claim"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.token_claim_get"
                  ],
                  "properties": {
                    "api.token_claim_get": {
                      "type": "string"
                    }
                  },
                  "description": "api.token_claim_get string payload"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.token_claim_get"
                  ],
                  "properties": {
                    "api.token_claim_get": {
                      "type": "string"
                    }
                  },
                  "description": "api.token_claim_get string payload"
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.token_claim_get"
                  ],
                  "properties": {
                    "api.token_claim_get": {
                      "type": "string"
                    }
                  },
                  "description": "api.token_claim_get string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ]
      }
    },
    "/api/app0-app1/1x0/api/token-claim-send": {
      "post": {
        "summary": "App0Att App0: token-claim-send",
        "description": "App0Att App0: token-claim-send",
        "parameters": [
          {
            "name": "provider_id",
            "in": "query",
            "required": true,
            "description": "Provider ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "Claim to share",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Claim"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.token_claim_send"
                  ],
                  "properties": {
                    "api.token_claim_send": {
                      "type": "string"
                    }
                  },
                  "description": "api.token_claim_send string payload"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.token_claim_send"
                  ],
                  "properties": {
                    "api.token_claim_send": {
                      "type": "string"
                    }
                  },
                  "description": "api.token_claim_send string payload"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.token_claim_send"
                  ],
                  "properties": {
                    "api.token_claim_send": {
                      "type": "string"
                    }
                  },
                  "description": "api.token_claim_send string payload"
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "api.token_claim_send"
                  ],
                  "properties": {
                    "api.token_claim_send": {
                      "type": "string"
                    }
                  },
                  "description": "api.token_claim_send string payload"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/app0-app1/1x0/api/claim-file-approve": {
      "get": {
        "summary": "App0Att App0: claim-file-approve",
        "description": "App0Att App0: claim-file-approve",
        "parameters": [
          {
            "name": "claim_id",
            "in": "query",
            "required": true,
            "description": "Claim id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notification_id",
            "in": "query",
            "required": true,
            "description": "File Notification id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "approved",
            "in": "query",
            "required": true,
            "description": "yes / no approvation state",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "approved_desc",
            "in": "query",
            "required": false,
            "description": "Aprovation description",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uploaded file notification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpRespInfo"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpRespInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpRespInfo"
                }
              }
            }
          }
        },
        "tags": [
          "claims_attendant.1x0"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/config-manager/0x15/runtime-apps-config": {
      "get": {
        "summary": "Config Manager: Runtime Apps Config",
        "description": "Returns the runtime config for the Apps running on this server",
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "required": false,
            "description": "URL used to reach this server, informative",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand_events",
            "in": "query",
            "required": false,
            "description": "Retrieve expanded effective events from event steps",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Config info about running apps in current process",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuntimeApps"
                }
              }
            }
          }
        },
        "tags": [
          "config_manager.0x15"
        ]
      }
    },
    "/api/config-manager/0x15/cluster-apps-config": {
      "get": {
        "summary": "Config Manager: Cluster Apps Config",
        "description": "Handle remote access to runtime configuration for a group of hosts",
        "parameters": [
          {
            "name": "hosts",
            "in": "query",
            "required": true,
            "description": "Comma-separated list of http://host:port strings",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand_events",
            "in": "query",
            "required": true,
            "description": "Extract effective events from event steps",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Combined config info about running apps in provided list of hosts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuntimeApps"
                }
              }
            }
          }
        },
        "tags": [
          "config_manager.0x15"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorInfo": {
        "type": "object",
        "required": [
          "msg",
          "tb"
        ],
        "properties": {
          "msg": {
            "type": "string"
          },
          "tb": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "x-module-name": "hopeit.server.errors",
        "description": "\n    Error information to be returned in failed responses\n    "
      },
      "AuthInfo": {
        "type": "object",
        "required": [
          "access_token",
          "token_type",
          "renew"
        ],
        "properties": {
          "access_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "renew": {
            "type": "integer"
          }
        },
        "x-module-name": "app0.platform.auth",
        "description": "\n    Minimal auth info that should be returned outside this app\n    "
      },
      "Dto": {
        "type": "object",
        "required": [
          "o"
        ],
        "properties": {
          "o": {
            "type": "object"
          }
        },
        "x-module-name": "app0.admin.http",
        "description": "\n    Generic object with a Dict with values for return in hopeit.engine\n    "
      },
      "Company": {
        "type": "object",
        "required": [
          "name",
          "phone_number",
          "email"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name"
          },
          "phone_number": {
            "type": "string",
            "description": "Phone Number"
          },
          "email": {
            "type": "string",
            "description": "Email"
          },
          "fantasy_name": {
            "type": "string",
            "default": "",
            "description": "Fantasy Name"
          },
          "ssn_ein": {
            "type": "string",
            "default": "",
            "description": "SSN/EIN"
          },
          "address": {
            "type": "string",
            "default": "",
            "description": "Address"
          },
          "image": {
            "type": "string",
            "description": "Company logo"
          },
          "alt_emails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Alternative Emails"
          },
          "alt_phones": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Alternative Phone Numbers"
          },
          "id": {
            "type": "string",
            "description": "Db id"
          },
          "enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enabled?"
          }
        },
        "x-module-name": "app0.admin.company",
        "description": "\n    Platform company\n    "
      },
      "HttpRespInfo": {
        "type": "object",
        "required": [
          "code",
          "msg"
        ],
        "properties": {
          "code": {
            "type": "integer"
          },
          "msg": {
            "type": "string"
          }
        },
        "x-module-name": "app0.admin.http",
        "description": "\n    HTTP response code with message\n    "
      },
      "Expr": {
        "type": "object",
        "properties": {
          "eq": {
            "type": "string",
            "description": "Match str field equal to"
          },
          "eq_bool": {
            "type": "boolean",
            "description": "Match bool field equal to"
          },
          "elem_match": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Match at least one element of array field"
          },
          "text": {
            "type": "string",
            "description": "Match text index"
          },
          "regex": {
            "type": "string",
            "description": "Match field by regex"
          },
          "or_regex": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Match OR a list of fields by regex"
          }
        },
        "x-module-name": "app0.admin.db",
        "description": "Expr(eq: Optional[str] = None, eq_bool: Optional[bool] = None, elem_match: Optional[Dict[str, str]] = None, text: Optional[str] = None, regex: Optional[str] = None, or_regex: Optional[Dict[str, str]] = None)"
      },
      "FieldSort": {
        "type": "object",
        "required": [
          "field"
        ],
        "properties": {
          "field": {
            "type": "string",
            "description": "Field to order"
          },
          "order": {
            "type": "integer",
            "default": 1,
            "description": "Type 1 asc, -1 desc"
          }
        },
        "x-module-name": "app0.admin.db",
        "description": "Field order tuple"
      },
      "Query": {
        "type": "object",
        "required": [
          "flts"
        ],
        "properties": {
          "flts": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Expr"
            }
          },
          "max_items": {
            "type": "integer",
            "default": 100
          },
          "sort": {
            "$ref": "#/components/schemas/FieldSort"
          }
        },
        "x-module-name": "app0.admin.db",
        "description": "\n    Query handler\n    "
      },
      "PlatformFile": {
        "type": "object",
        "required": [
          "bucket",
          "filename",
          "size",
          "src_filename",
          "object_id"
        ],
        "properties": {
          "bucket": {
            "type": "string",
            "description": "Bucket"
          },
          "filename": {
            "type": "string",
            "description": "Filename"
          },
          "size": {
            "type": "integer",
            "description": "Size"
          },
          "src_filename": {
            "type": "string",
            "description": "Source filename"
          },
          "object_id": {
            "type": "string",
            "description": "Full path filename Object Id"
          },
          "creation_date": {
            "type": "string",
            "format": "date-time",
            "description": "Creation Date"
          },
          "approved": {
            "type": "boolean",
            "description": "File approved or rejected"
          },
          "approved_desc": {
            "type": "string",
            "description": "File approved or rejected description"
          }
        },
        "x-module-name": "app0.admin.file",
        "description": "\n    File uploaded\n    "
      },
      "CompanyConfig": {
        "type": "object",
        "properties": {
          "w9_document_mandatory": {
            "type": "boolean",
            "default": true,
            "description": "W9 Document Mandatory?"
          },
          "w9_document_date": {
            "type": "string",
            "format": "date-time",
            "description": "W9 upload date"
          },
          "w9_document_resource": {
            "$ref": "#/components/schemas/PlatformFile",
            "description": "W9 Document"
          },
          "lor_document_mandatory": {
            "type": "boolean",
            "default": false,
            "description": "LOR Base Document Mandatory?"
          },
          "lor_document_date": {
            "type": "string",
            "format": "date-time",
            "description": "LOR Base upload date"
          },
          "lor_document_resource": {
            "$ref": "#/components/schemas/PlatformFile",
            "description": "LOR Base Document"
          },
          "spol_document_mandatory": {
            "type": "boolean",
            "default": false,
            "description": "SPOL Base Document Mandatory?"
          },
          "spol_document_date": {
            "type": "string",
            "format": "date-time",
            "description": "SPOL Base upload date"
          },
          "spol_document_resource": {
            "$ref": "#/components/schemas/PlatformFile",
            "description": "SPOL Base Document"
          },
          "attorney_list_mandatory": {
            "type": "boolean",
            "default": false,
            "description": "Attorney List document Mandatory?"
          },
          "attorney_list_date": {
            "type": "string",
            "format": "date-time",
            "description": "Attorney List upload date"
          },
          "attorney_list_resource": {
            "$ref": "#/components/schemas/PlatformFile",
            "description": "Attorney List document"
          },
          "owner_id": {
            "type": "string",
            "description": "Owner Id"
          },
          "owner_name": {
            "type": "string",
            "description": "Owner Name"
          },
          "id": {
            "type": "string",
            "description": "Db id"
          },
          "enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enabled?"
          }
        },
        "x-module-name": "app0.admin.company",
        "description": "\n    Platform company configuration\n    "
      },
      "PlanInfo": {
        "type": "object",
        "required": [
          "start_date"
        ],
        "properties": {
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Start subscription date"
          },
          "name": {
            "type": "string",
            "default": "",
            "description": "Plan Name"
          },
          "description": {
            "type": "string",
            "default": "",
            "description": "Plan Description"
          },
          "annual_payment": {
            "type": "boolean",
            "default": true,
            "description": "Annual payment or Monthly payment?"
          },
          "monthly_amount": {
            "type": "number",
            "default": 0.0,
            "description": "Plan Monthly Amount"
          },
          "annual_amount": {
            "type": "number",
            "default": 0.0,
            "description": "Annual Amount"
          },
          "max_open_claims": {
            "type": "integer",
            "default": 0,
            "description": "Plan Max Open App0"
          },
          "max_adjusters": {
            "type": "integer",
            "default": 0,
            "description": "Plan Max Public Adjusters"
          },
          "max_storage": {
            "type": "integer",
            "default": 0,
            "description": "Plan Max Storage"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "description": "End subscription date"
          }
        },
        "x-module-name": "app0.admin.subscription",
        "description": "\n    PlanInfo\n    "
      },
      "BillingInfo": {
        "type": "object",
        "properties": {
          "card_holder": {
            "type": "string",
            "default": "",
            "description": "Credit Card Holder"
          },
          "card_id": {
            "type": "string",
            "default": "",
            "description": "Credit Card StripeID"
          }
        },
        "x-module-name": "app0.admin.subscription",
        "description": "\n    BillingInfo\n    "
      },
      "Registration": {
        "type": "object",
        "required": [
          "firstname",
          "surname",
          "email"
        ],
        "properties": {
          "firstname": {
            "type": "string",
            "description": "Firstname"
          },
          "surname": {
            "type": "string",
            "description": "Surname"
          },
          "email": {
            "type": "string",
            "description": "Email"
          },
          "phone": {
            "type": "string",
            "default": "",
            "description": "Phone"
          },
          "position": {
            "$ref": "#/components/schemas/IdDescription",
            "description": "Position"
          },
          "license_id": {
            "type": "string",
            "default": "",
            "description": "License ID"
          },
          "address": {
            "type": "string",
            "default": "",
            "description": "Address"
          },
          "company_id": {
            "type": "string",
            "default": "",
            "description": "Company Id"
          },
          "company_name": {
            "type": "string",
            "default": "",
            "description": "Company Name"
          },
          "company_phone": {
            "type": "string",
            "default": "",
            "description": "Company Phone"
          },
          "company_address": {
            "type": "string",
            "default": "",
            "description": "Company Address"
          },
          "company_email": {
            "type": "string",
            "default": "",
            "description": "Company Email"
          },
          "company_image": {
            "type": "string",
            "default": "",
            "description": "Company Logo"
          },
          "plan_id": {
            "type": "string",
            "default": "",
            "description": "Plan id"
          },
          "plan_name": {
            "type": "string",
            "default": "",
            "description": "Plan Name"
          },
          "plan_description": {
            "type": "string",
            "default": "",
            "description": "Plan Description"
          },
          "plan_annual_payment": {
            "type": "boolean",
            "default": true,
            "description": "Annual payment or Monthly payment?"
          },
          "plan_monthly_amount": {
            "type": "number",
            "description": "Plan Monthly Amount"
          },
          "plan_annual_amount": {
            "type": "number",
            "description": "Plan Annual Amount"
          },
          "plan_max_open_claims": {
            "type": "integer",
            "description": "Plan Max Open App0"
          },
          "plan_max_adjusters": {
            "type": "integer",
            "description": "Plan Max Public Adjusters"
          },
          "plan_max_storage": {
            "type": "integer",
            "description": "Max Storage (in GB)"
          },
          "creation_date": {
            "type": "string",
            "format": "date-time",
            "description": "Creation date"
          },
          "confirm_date": {
            "type": "string",
            "format": "date-time",
            "description": "Confirm registration date"
          },
          "email_confirm_date": {
            "type": "string",
            "format": "date-time",
            "description": "Email Confirm date"
          },
          "email_confirmed": {
            "type": "boolean",
            "default": false,
            "description": "Email Confirmed"
          },
          "phone_confirm_date": {
            "type": "string",
            "format": "date-time",
            "description": "Phone Confirm date"
          },
          "phone_confirmed": {
            "type": "boolean",
            "default": false,
            "description": "Phone Confirmed"
          },
          "status": {
            "type": "string",
            "default": "Incomplete",
            "description": "Incomplete / Unprocessed / Confirmed / Error"
          },
          "status_error": {
            "type": "string",
            "description": "Status error message"
          },
          "billing_card_holder": {
            "type": "string",
            "default": "",
            "description": "Credit Card Holder"
          },
          "billing_card_id": {
            "type": "string",
            "default": "",
            "description": "Credit Card StripeID"
          },
          "id": {
            "type": "string",
            "description": "Db id"
          },
          "enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enabled?"
          }
        },
        "x-module-name": "app0.admin.registration",
        "description": "\n    Registration\n    "
      },
      "IdDescription": {
        "type": "object",
        "required": [
          "value",
          "label"
        ],
        "properties": {
          "value": {
            "type": "string",
            "description": "ObjectId"
          },
          "label": {
            "type": "string",
            "description": "Description"
          },
          "internal_id": {
            "type": "string",
            "description": "Human readable internalID"
          },
          "details": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Human readable internalID"
          }
        },
        "x-module-name": "app0.admin.common",
        "description": "\n    Id with description\n    "
      },
      "Invoice": {
        "type": "object",
        "required": [
          "date",
          "next_invoice",
          "number",
          "remit_to",
          "invoice_to",
          "subtotal",
          "tax",
          "total",
          "subscription_id",
          "company_id",
          "items"
        ],
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Invoice date"
          },
          "next_invoice": {
            "type": "string",
            "format": "date-time",
            "description": "Next Invoice date"
          },
          "number": {
            "type": "string",
            "description": "Invoice number"
          },
          "remit_to": {
            "type": "string",
            "description": "Remit To"
          },
          "invoice_to": {
            "type": "string",
            "description": "Invoice To"
          },
          "subtotal": {
            "type": "number",
            "description": "Subtotal"
          },
          "tax": {
            "type": "number",
            "description": "Tax"
          },
          "total": {
            "type": "number",
            "description": "Total"
          },
          "subscription_id": {
            "type": "string",
            "description": "Subscription ID"
          },
          "company_id": {
            "type": "string",
            "description": "Company Id"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceItem"
            },
            "description": "Items"
          },
          "document_type": {
            "type": "string",
            "default": "Invoice",
            "description": "Document type"
          },
          "id": {
            "type": "string",
            "description": "Db id"
          }
        },
        "x-module-name": "app0.admin.subscription",
        "description": "\n    Invoice\n    "
      },
      "InvoiceItem": {
        "type": "object",
        "required": [
          "description",
          "amount",
          "tax",
          "total"
        ],
        "properties": {
          "description": {
            "type": "string",
            "description": "Description"
          },
          "amount": {
            "type": "number",
            "description": "Amount"
          },
          "tax": {
            "type": "number",
            "description": "Tax Amount"
          },
          "total": {
            "type": "number",
            "description": "Total Amount"
          },
          "from_date": {
            "type": "string",
            "format": "date-time",
            "description": "From date"
          },
          "to_date": {
            "type": "string",
            "format": "date-time",
            "description": "To date"
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity"
          }
        },
        "x-module-name": "app0.admin.subscription",
        "description": "\n    Invoice\n    "
      },
      "Payment": {
        "type": "object",
        "required": [
          "date",
          "number",
          "remit_email",
          "company_id",
          "total",
          "invoice_id",
          "success"
        ],
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Payment date"
          },
          "number": {
            "type": "string",
            "description": "Payment number"
          },
          "remit_email": {
            "type": "string",
            "description": "Remit email addres"
          },
          "company_id": {
            "type": "string",
            "description": "Company ID"
          },
          "total": {
            "type": "number",
            "description": "Total"
          },
          "invoice_id": {
            "type": "string",
            "description": "Related invoice"
          },
          "success": {
            "type": "boolean",
            "description": "Payment processing sucess"
          },
          "document_type": {
            "type": "string",
            "default": "Payment",
            "description": "Document type"
          },
          "processing_history": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "default": [],
            "description": "History of payment processing"
          },
          "id": {
            "type": "string",
            "description": "Db id"
          }
        },
        "x-module-name": "app0.admin.subscription",
        "description": "\n    Payment\n    "
      },
      "Subscription": {
        "type": "object",
        "required": [
          "start_date",
          "plan",
          "billing",
          "user_id",
          "user_name",
          "company_id",
          "company_name"
        ],
        "properties": {
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Start subscription date"
          },
          "plan": {
            "$ref": "#/components/schemas/PlanInfo",
            "description": "Plan"
          },
          "billing": {
            "$ref": "#/components/schemas/BillingInfo",
            "description": "Billing"
          },
          "user_id": {
            "type": "string",
            "description": "User ID"
          },
          "user_name": {
            "type": "string",
            "description": "User Name"
          },
          "company_id": {
            "type": "string",
            "description": "Company ID"
          },
          "company_name": {
            "type": "string",
            "description": "Company Name"
          },
          "registration": {
            "$ref": "#/components/schemas/Registration",
            "description": "Registration Origin"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "description": "End subscription date"
          },
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Invoice"
            },
            "default": [],
            "description": "Invoices"
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payment"
            },
            "default": [],
            "description": "Payments"
          },
          "plan_history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlanInfo"
            },
            "default": [],
            "description": "Plan history"
          },
          "enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enabled?"
          },
          "id": {
            "type": "string",
            "description": "Db id"
          }
        },
        "x-module-name": "app0.admin.subscription",
        "description": "\n    Subscription\n    "
      },
      "OpenClaimRequirement": {
        "type": "object",
        "properties": {
          "completed": {
            "type": "boolean",
            "default": false,
            "description": "Completed or not"
          },
          "description": {
            "type": "string",
            "default": "",
            "description": "Requirement description"
          },
          "module": {
            "type": "string",
            "default": "",
            "description": "Module name to set requirement"
          }
        },
        "x-module-name": "app0.app1.claim",
        "description": "\n    Requeriment to open a claim\n    "
      },
      "AddressGeoJson": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "",
            "description": "Type"
          },
          "coordinates": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "default": [],
            "description": "Coordinates"
          }
        },
        "x-module-name": "app0.admin.common",
        "description": "\n    GeoJson\n    "
      },
      "ClaimInspection": {
        "type": "object",
        "required": [
          "inspection_date"
        ],
        "properties": {
          "inspection_date": {
            "type": "string",
            "format": "date-time",
            "description": "Creation date"
          },
          "inhouse_adjusters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdDescription"
            },
            "default": [],
            "description": "In-house adjusters"
          },
          "inscomp_representatives": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdDescription"
            },
            "default": [],
            "description": "Ins company representatives"
          },
          "notes": {
            "type": "string",
            "default": "",
            "description": "Notes"
          }
        },
        "x-module-name": "app0.app1.claim",
        "description": "\n    Claim inspection\n    "
      },
      "ClaimResolution": {
        "type": "object",
        "properties": {
          "rel_upload_date": {
            "type": "string",
            "format": "date-time",
            "description": "Release upload date"
          },
          "rel_client_files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdDescription"
            },
            "default": [],
            "description": "Send Release to client files"
          },
          "rel_client_dest": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Send Release to client mails"
          },
          "rel_client_dest2": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Send Release to client mails2"
          },
          "rel_send_client_date": {
            "type": "string",
            "format": "date-time",
            "description": "Send Release to client date"
          },
          "rel_client_upload_date": {
            "type": "string",
            "format": "date-time",
            "description": "Release received upload date"
          },
          "rel_client_approved": {
            "type": "boolean",
            "default": false,
            "description": "Release received Approved"
          },
          "rel_client_approved_desc": {
            "type": "string",
            "description": "Release received Approved description"
          },
          "rel_ic_files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdDescription"
            },
            "default": [],
            "description": "Send Release mail to IC files"
          },
          "rel_ic_dest": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Send Release mail to IC mails"
          },
          "rel_ic_dest2": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Send Release mail to IC mails2"
          },
          "rel_ic_date": {
            "type": "string",
            "format": "date-time",
            "description": "Send Release to ins comp date"
          },
          "app_appraiser": {
            "$ref": "#/components/schemas/IdDescription",
            "description": "Appraisal Appraiser"
          },
          "app_appraiser_date": {
            "type": "string",
            "format": "date-time",
            "description": "Appraisal Appraiser date available"
          },
          "app_award_upload_date": {
            "type": "string",
            "format": "date-time",
            "description": "Appraisal award upload date"
          },
          "app_icesti_upload_date": {
            "type": "string",
            "format": "date-time",
            "description": "Appraisal ic estimate upload date"
          },
          "app_appr_files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdDescription"
            },
            "default": [],
            "description": "Send Release mail to Appraiser files"
          },
          "app_appr_dest": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Send Release mail to Appraiser mails"
          },
          "app_appr_dest2": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Send Release mail to Appraiser mails2"
          },
          "app_appr_date": {
            "type": "string",
            "format": "date-time",
            "description": "Send Release to Appraiser date"
          },
          "ump_umpire": {
            "$ref": "#/components/schemas/IdDescription",
            "description": "Umpire"
          },
          "ump_sou_upload_date": {
            "type": "string",
            "format": "date-time",
            "description": "Appraisal award upload date"
          },
          "ump_ack_upload_date": {
            "type": "string",
            "format": "date-time",
            "description": "Appraisal acknowledgment upload date"
          },
          "ump_ack_client_files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdDescription"
            },
            "default": [],
            "description": "Send Ack to client files"
          },
          "ump_ack_client_dest": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Send Ack to client mails"
          },
          "ump_ack_client_dest2": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Send Ack to client mails2"
          },
          "ump_ack_send_client_date": {
            "type": "string",
            "format": "date-time",
            "description": "Send Ack to client date"
          },
          "ump_ack_cli_upload_date": {
            "type": "string",
            "format": "date-time",
            "description": "Acknowledgment from client upload date"
          },
          "ump_ack_client_approved": {
            "type": "boolean",
            "default": false,
            "description": "Acknowledgment from client Approved"
          },
          "ump_ack_client_approved_desc": {
            "type": "string",
            "description": "Ack from client Approved description"
          },
          "ump_umpire_date": {
            "type": "string",
            "format": "date-time",
            "description": "Umpire date available"
          },
          "ump_esx_request_est_date": {
            "type": "string",
            "format": "date-time",
            "description": "Request ESX from estimator"
          },
          "ump_esx_upload_date": {
            "type": "string",
            "format": "date-time",
            "description": "Umpire ESX upload date"
          },
          "ump_esx_files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdDescription"
            },
            "default": [],
            "description": "Send ESX mail to Umpire files"
          },
          "ump_esx_dest": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Send ESX mail to Umpire mails"
          },
          "ump_esx_dest2": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Send ESX mail to Umpire mails2"
          },
          "ump_esx_date": {
            "type": "string",
            "format": "date-time",
            "description": "Send ESX to Umpire date"
          },
          "ump_award_upload_date": {
            "type": "string",
            "format": "date-time",
            "description": "Umpire award upload date"
          },
          "ump_estimate_upload_date": {
            "type": "string",
            "format": "date-time",
            "description": "Umpire estimate upload date"
          },
          "ump_invoice_upload_date": {
            "type": "string",
            "format": "date-time",
            "description": "Umpire invoice upload date"
          },
          "ump_invoice": {
            "type": "string",
            "description": "Pending payment/Payed"
          },
          "est_icesti_upload_date": {
            "type": "string",
            "format": "date-time",
            "description": "Estimate ic estimate upload date"
          },
          "agr_emproof_upload_date": {
            "type": "string",
            "format": "date-time",
            "description": "Agreement email proof upload date"
          },
          "agr_icesti_upload_date": {
            "type": "string",
            "format": "date-time",
            "description": "Agreement ic estimate upload date"
          },
          "att_reason": {
            "type": "string",
            "description": "Attorney reason"
          },
          "att_attorney": {
            "$ref": "#/components/schemas/IdDescription",
            "description": "Attorney"
          },
          "att_ret_client_dest": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Send Retainer to client mails"
          },
          "att_ret_client_dest2": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Send Retainer to client mails2"
          },
          "att_ret_send_client_date": {
            "type": "string",
            "format": "date-time",
            "description": "Send Retainer to client date"
          },
          "att_ret_cli_upload_date": {
            "type": "string",
            "format": "date-time",
            "description": "Retainer from client upload date"
          },
          "att_ret_client_approved": {
            "type": "boolean",
            "default": false,
            "description": "Retainer from client Approved"
          },
          "att_ret_client_approved_desc": {
            "type": "string",
            "description": "Retainer from client Approved description"
          },
          "att_ret_files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdDescription"
            },
            "default": [],
            "description": "Send Retainer mail to Attorney files"
          },
          "att_ret_dest": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Send Retainer mail to Attorney mails"
          },
          "att_ret_dest2": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Send Retainer mail to Attorney mails2"
          },
          "att_ret_date": {
            "type": "string",
            "format": "date-time",
            "description": "Send Retainer to Attorney date"
          },
          "amount": {
            "type": "number",
            "description": "Amount $"
          },
          "notes": {
            "type": "string",
            "description": "Resolution notes"
          },
          "claim_resolved": {
            "type": "boolean",
            "default": false,
            "description": "Claim Resolved"
          },
          "payment_regularized": {
            "type": "boolean",
            "default": false,
            "description": "Payment Regularized"
          }
        },
        "x-module-name": "app0.app1.claim",
        "description": "\n    Claim resolution\n    "
      },
      "Workflow": {
        "type": "object",
        "required": [
          "doc_type",
          "ts",
          "state_previous",
          "action",
          "description_action",
          "state",
          "description_state",
          "user"
        ],
        "properties": {
          "doc_type": {
            "type": "string",
            "enum": [
              "claim"
            ],
            "x-enum-name": "DocType",
            "x-module-name": "app0.app1.workflow"
          },
          "ts": {
            "type": "string",
            "format": "date-time"
          },
          "state_previous": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "description_action": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "description_state": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "allowed_actions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Action"
            },
            "default": {}
          }
        },
        "x-module-name": "app0.app1.workflow",
        "description": "\n    Workflow definition\n    "
      },
      "Action": {
        "type": "object",
        "required": [
          "description",
          "state"
        ],
        "properties": {
          "description": {
            "type": "string"
          },
          "state": {
            "type": "string"
          }
        },
        "x-module-name": "app0.app1.workflow",
        "description": "Action(description: str, state: str)"
      },
      "Claim": {
        "type": "object",
        "required": [
          "property_address",
          "claim_type",
          "public_adjuster",
          "insurance_company",
          "property_type",
          "creation_date",
          "loss_date"
        ],
        "properties": {
          "property_address": {
            "type": "string",
            "description": "Property address"
          },
          "claim_type": {
            "type": "string",
            "description": "New, Reopen or Emergency"
          },
          "public_adjuster": {
            "$ref": "#/components/schemas/IdDescription",
            "description": "Public adjuster"
          },
          "insurance_company": {
            "$ref": "#/components/schemas/IdDescription",
            "description": "Insurance Company"
          },
          "property_type": {
            "type": "string",
            "description": "Property type"
          },
          "creation_date": {
            "type": "string",
            "format": "date-time",
            "description": "Creation date"
          },
          "loss_date": {
            "type": "string",
            "format": "date-time",
            "description": "Date of loss"
          },
          "clients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdDescription"
            },
            "default": [],
            "description": "Clients"
          },
          "damage": {
            "$ref": "#/components/schemas/IdDescription",
            "description": "Damage type"
          },
          "file_number": {
            "type": "string",
            "default": "",
            "description": "Internal App0 App1 File Number"
          },
          "claim_number": {
            "type": "string",
            "default": "",
            "description": "Insurance Company Claim Number"
          },
          "apprentice": {
            "$ref": "#/components/schemas/IdDescription",
            "description": "Apprentice (if applicable)"
          },
          "policy_number": {
            "type": "string",
            "default": "",
            "description": "Policy number"
          },
          "deductible_amount": {
            "type": "number",
            "default": 0.0,
            "description": "Deductible Amount $"
          },
          "spanish_only": {
            "type": "boolean",
            "default": false,
            "description": "Spanish only speaker"
          },
          "water_limit": {
            "type": "boolean",
            "default": false,
            "description": "10k water limit"
          },
          "mold": {
            "type": "boolean",
            "default": false,
            "description": "Mold"
          },
          "mold_limit": {
            "type": "number",
            "description": "Mold limit $ (if mold)"
          },
          "mitigation": {
            "type": "boolean",
            "default": false,
            "description": "Mitigation"
          },
          "tarp": {
            "type": "boolean",
            "default": false,
            "description": "Tarp"
          },
          "mortgage": {
            "type": "boolean",
            "default": false,
            "description": "Mortgage"
          },
          "mortgage_lender": {
            "type": "string",
            "description": "Mortgage lender"
          },
          "mortgage_behind_payment": {
            "type": "boolean",
            "default": false,
            "description": "Mortgage behind payment"
          },
          "mortgage_process_of_loan_modification": {
            "type": "boolean",
            "default": false,
            "description": "Mortgage process of loan modification"
          },
          "mortgage_property_in_foreclosure": {
            "type": "boolean",
            "default": false,
            "description": "Mortgage property in foreclosure"
          },
          "rental": {
            "type": "boolean",
            "default": false,
            "description": "Rental property"
          },
          "rental_tenant_name": {
            "type": "string",
            "description": "Rental tenant name"
          },
          "rental_tenant_phone": {
            "type": "string",
            "description": "Rental tenant phone"
          },
          "rental_tenant_email": {
            "type": "string",
            "description": "Rental tenant email"
          },
          "loss_description": {
            "type": "string",
            "default": "",
            "description": "Loss description"
          },
          "loss_repairs_done": {
            "type": "boolean",
            "default": false,
            "description": "Loss repairs done?"
          },
          "loss_pictures": {
            "type": "boolean",
            "default": true,
            "description": "Loss pictures?"
          },
          "loss_damage_type": {
            "type": "string",
            "default": "",
            "description": "Loss repairs done?"
          },
          "loss_roof_type": {
            "type": "string",
            "default": "",
            "description": "Loss roof type"
          },
          "loss_roof_material": {
            "type": "string",
            "default": "",
            "description": "Loss roof material"
          },
          "loss_roof_tile_type": {
            "type": "string",
            "default": "",
            "description": "Loss roof tile type"
          },
          "property_geometry": {
            "$ref": "#/components/schemas/AddressGeoJson",
            "description": "Geo JSON Coordinates"
          },
          "property_address_zip": {
            "type": "string",
            "description": "Zip Code"
          },
          "owner_id": {
            "type": "string",
            "description": "Owner Id"
          },
          "owner_name": {
            "type": "string",
            "description": "Owner Name"
          },
          "open_lor_upload_date": {
            "type": "string",
            "format": "date-time",
            "description": "LOR upload date"
          },
          "open_scope_upload_date": {
            "type": "string",
            "format": "date-time",
            "description": "SCOPE upload date"
          },
          "open_dec_upload_date": {
            "type": "string",
            "format": "date-time",
            "description": "DEC upload date"
          },
          "open_other_upload_date": {
            "type": "string",
            "format": "date-time",
            "description": "OTHER REQ upload date"
          },
          "open_lor_ic_files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdDescription"
            },
            "default": [],
            "description": "Send LOR mail to IC files"
          },
          "open_lor_ic_dest": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Send LOR mail to IC mails"
          },
          "open_lor_ic_dest2": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Send LOR mail to IC mails2"
          },
          "open_lor_ic_date": {
            "type": "string",
            "format": "date-time",
            "description": "Send LOR mail to IC date"
          },
          "estimator": {
            "$ref": "#/components/schemas/IdDescription",
            "description": "Estimator"
          },
          "open_estimator_dest2": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Send Claim mail to estimator mails2"
          },
          "open_estimator_date": {
            "type": "string",
            "format": "date-time",
            "description": "Send Claim mail to estimator date"
          },
          "inspection_1": {
            "$ref": "#/components/schemas/ClaimInspection",
            "description": "First Inspection"
          },
          "inspection_2": {
            "$ref": "#/components/schemas/ClaimInspection",
            "description": "Second Inspection"
          },
          "inspection_3": {
            "$ref": "#/components/schemas/ClaimInspection",
            "description": "Specialized Inspection"
          },
          "mitigation_benefit_upload_date": {
            "type": "string",
            "format": "date-time",
            "description": "Benefit upload date"
          },
          "mitigation_invoice_upload_date": {
            "type": "string",
            "format": "date-time",
            "description": "Invoice upload date"
          },
          "mitigation_photo_upload_date": {
            "type": "string",
            "format": "date-time",
            "description": "Photo upload date"
          },
          "mitigation_docs_ic_files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdDescription"
            },
            "default": [],
            "description": "Send Mitigation mail to IC files"
          },
          "mitigation_docs_ic_dest": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Send Mitigation mail to IC mails"
          },
          "mitigation_docs_ic_dest2": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Send Mitigation mail to IC mails2"
          },
          "mitigation_docs_ic_date": {
            "type": "string",
            "format": "date-time",
            "description": "Send Mitigation mail to IC date"
          },
          "receipts_upload_date": {
            "type": "string",
            "format": "date-time",
            "description": "Receipts upload date"
          },
          "receipts_invoice_upload_date": {
            "type": "string",
            "format": "date-time",
            "description": "Receipts invoices upload date"
          },
          "receipts_docs_ic_files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdDescription"
            },
            "default": [],
            "description": "Send Receipts mail to IC files"
          },
          "receipts_docs_ic_dest": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Send Receipts mail to IC mails"
          },
          "receipts_docs_ic_dest2": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Send Receipts mail to IC mails2"
          },
          "receipts_docs_ic_date": {
            "type": "string",
            "format": "date-time",
            "description": "Send Receipts mail to IC date"
          },
          "receive_estimation_date": {
            "type": "string",
            "format": "date-time",
            "description": "Date of receiving estimate from estimator"
          },
          "estimate_upload_date": {
            "type": "string",
            "format": "date-time",
            "description": "Estimate upload date"
          },
          "estimate_amount": {
            "type": "number",
            "description": "Estimate Amount $"
          },
          "estimate_docs_ic_files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdDescription"
            },
            "default": [],
            "description": "Send Receipts mail to IC files"
          },
          "estimate_docs_ic_dest": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Send Receipts mail to IC mails"
          },
          "estimate_docs_ic_dest2": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Send Receipts mail to IC mails2"
          },
          "estimate_docs_ic_date": {
            "type": "string",
            "format": "date-time",
            "description": "Send Estimate mail to IC date"
          },
          "spol_client_files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdDescription"
            },
            "default": [],
            "description": "Send SPOL unsigned mail to client files"
          },
          "spol_client_dest": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Send SPOL unsigned mail to client mails"
          },
          "spol_client_dest2": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Send SPOL unsigned mail to client mails2"
          },
          "spol_send_client_date": {
            "type": "string",
            "format": "date-time",
            "description": "Send SPOL to client"
          },
          "spol_unsigned_upload_date": {
            "type": "string",
            "format": "date-time",
            "description": "SPOL Unsigned by client upload date"
          },
          "spol_upload_date": {
            "type": "string",
            "format": "date-time",
            "description": "SPOL Signed by client upload date"
          },
          "spol_client_approved": {
            "type": "boolean",
            "default": false,
            "description": "SPOL Approved"
          },
          "spol_client_approved_desc": {
            "type": "string",
            "description": "SPOL Approved description"
          },
          "spol_ic_files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdDescription"
            },
            "default": [],
            "description": "Send SPOL mail to IC files"
          },
          "spol_ic_dest": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Send SPOL mail to IC mails"
          },
          "spol_ic_dest2": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Send SPOL mail to IC mails2"
          },
          "spol_ic_date": {
            "type": "string",
            "format": "date-time",
            "description": "Send SPOL to ins comp date"
          },
          "resolution": {
            "$ref": "#/components/schemas/ClaimResolution",
            "description": "Claim resolution"
          },
          "resolution_amount": {
            "type": "number",
            "description": "Resolution Amount $"
          },
          "workflow": {
            "$ref": "#/components/schemas/Workflow",
            "description": "State Workflow"
          },
          "id": {
            "type": "string",
            "description": "Db id"
          },
          "enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enabled?"
          }
        },
        "x-module-name": "app0.app1.claim",
        "description": "\n    Claim\n    "
      },
      "SearchResults": {
        "type": "object",
        "required": [
          "results"
        ],
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "array"
                },
                {
                  "type": "object"
                }
              ]
            }
          },
          "total": {
            "type": "integer",
            "default": 0
          },
          "page": {
            "type": "integer",
            "default": 0
          },
          "page_size": {
            "type": "integer",
            "default": 0
          },
          "offset": {
            "type": "integer"
          },
          "next_page": {
            "type": "integer"
          },
          "next_offset": {
            "type": "integer"
          }
        },
        "x-module-name": "app0.admin.db",
        "description": "SearchResults(results: List[Union[Dict[Any, Any], List[Any]]], total: int = 0, page: int = 0, page_size: int = 0, offset: Optional[int] = None, next_page: Optional[int] = None, next_offset: Optional[int] = None)"
      },
      "Notification": {
        "type": "object",
        "required": [
          "creation_date"
        ],
        "properties": {
          "creation_date": {
            "type": "string",
            "format": "date-time",
            "description": "Creation date"
          },
          "user_id": {
            "type": "string",
            "default": "",
            "description": "User id"
          },
          "user_name": {
            "type": "string",
            "default": "",
            "description": "Username"
          },
          "owner_id": {
            "type": "string",
            "default": "",
            "description": "Owner id"
          },
          "owner_name": {
            "type": "string",
            "default": "",
            "description": "Owner name"
          },
          "content": {
            "type": "string",
            "default": "",
            "description": "Description or Text"
          },
          "app_name": {
            "type": "string",
            "default": "",
            "description": "App"
          },
          "object_type": {
            "type": "string",
            "default": "",
            "description": "Object type"
          },
          "object_id": {
            "type": "string",
            "default": "",
            "description": "Object id"
          },
          "object_internal_id": {
            "type": "string",
            "description": "Human readable id if exists"
          },
          "object_name": {
            "type": "string",
            "description": "Object name if exists"
          },
          "type": {
            "type": "string",
            "default": "log",
            "description": "log/error/direct/upload/mail/call/papers/event/state-change/estimation/negotiation/agreement/decline"
          },
          "dest_user_id": {
            "type": "string",
            "default": "",
            "description": "Destination User id"
          },
          "tags": {
            "type": "string",
            "default": "",
            "description": "Tags"
          },
          "id_file": {
            "type": "string",
            "description": "Related file id"
          },
          "file_resource": {
            "$ref": "#/components/schemas/PlatformFile",
            "description": "Related file resource"
          },
          "id": {
            "type": "string",
            "description": "Db id"
          },
          "enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enabled?"
          }
        },
        "x-module-name": "app0.admin.notification",
        "description": "\n    Notification or log\n    "
      },
      "Client": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "default": "",
            "description": "Firstname"
          },
          "middle_name": {
            "type": "string",
            "default": "",
            "description": "Middle Name"
          },
          "surname": {
            "type": "string",
            "default": "",
            "description": "Surname"
          },
          "email": {
            "type": "string",
            "default": "",
            "description": "Email"
          },
          "phone_number": {
            "type": "string",
            "default": "",
            "description": "Phone Number"
          },
          "client_number": {
            "type": "string",
            "default": "",
            "description": "Internal App0 App1 Client Number"
          },
          "mailing_address": {
            "type": "string",
            "default": "",
            "description": "Mailing Address"
          },
          "ssn_ein": {
            "type": "string",
            "default": "",
            "description": "SSN/EIN"
          },
          "qty_properties": {
            "type": "integer",
            "default": 0,
            "description": "Quantity of properties"
          },
          "is_company": {
            "type": "boolean",
            "default": false,
            "description": "Is Company?"
          },
          "company_name": {
            "type": "string",
            "description": "Company name if client is company"
          },
          "company_ssn_ein": {
            "type": "string",
            "description": "Company SSN/EIN if client is company"
          },
          "notes": {
            "type": "string",
            "description": "Notes"
          },
          "owner_id": {
            "type": "string",
            "description": "Owner Id"
          },
          "owner_name": {
            "type": "string",
            "description": "Owner Name"
          },
          "adjuster": {
            "$ref": "#/components/schemas/IdDescription",
            "description": "Current Adjuster"
          },
          "spanish_speaker": {
            "type": "boolean",
            "default": false,
            "description": "Spanish speaker only?"
          },
          "image": {
            "type": "string",
            "description": "Employee image"
          },
          "id": {
            "type": "string",
            "description": "Db id"
          },
          "enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enabled?"
          }
        },
        "x-module-name": "app0.admin.client",
        "description": "\n    Client\n    "
      },
      "State": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Db id"
          },
          "name": {
            "type": "string",
            "default": "",
            "description": "State"
          },
          "abbr": {
            "type": "string",
            "default": "",
            "description": "State abbreviation"
          }
        },
        "x-module-name": "app0.admin.location",
        "description": "\n    State\n    "
      },
      "County": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Db id"
          },
          "name": {
            "type": "string",
            "default": "",
            "description": "County"
          },
          "abbr": {
            "type": "string",
            "default": "",
            "description": "County abbreviation"
          }
        },
        "x-module-name": "app0.admin.location",
        "description": "\n    County\n    "
      },
      "City": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Db id"
          },
          "name": {
            "type": "string",
            "default": "",
            "description": "Name"
          },
          "state": {
            "$ref": "#/components/schemas/State",
            "description": "State"
          },
          "county": {
            "$ref": "#/components/schemas/County",
            "description": "County"
          },
          "zip_code": {
            "type": "string",
            "default": "",
            "description": "Zip code"
          }
        },
        "x-module-name": "app0.admin.location",
        "description": "\n    City\n    "
      },
      "Damage": {
        "type": "object",
        "required": [
          "name",
          "category"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name"
          },
          "category": {
            "type": "string",
            "description": "Category"
          },
          "image": {
            "type": "string",
            "default": "",
            "description": "Related image"
          },
          "owner_id": {
            "type": "string",
            "description": "Owner Id"
          },
          "owner_name": {
            "type": "string",
            "description": "Owner Name"
          },
          "id": {
            "type": "string",
            "description": "Db id"
          },
          "description": {
            "type": "string",
            "description": "description"
          },
          "enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enabled?"
          },
          "from_date": {
            "type": "string",
            "format": "date-time",
            "description": "From Date"
          },
          "to_date": {
            "type": "string",
            "format": "date-time",
            "description": "To Date"
          },
          "states": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/State"
            },
            "default": [],
            "description": "States"
          },
          "counties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/County"
            },
            "default": [],
            "description": "Counties"
          },
          "cities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/City"
            },
            "default": [],
            "description": "Cities"
          },
          "notes": {
            "type": "string",
            "description": "Notes"
          }
        },
        "x-module-name": "app0.admin.damage",
        "description": "\n    Damage\n    "
      },
      "Employee": {
        "type": "object",
        "required": [
          "firstname",
          "surname",
          "email"
        ],
        "properties": {
          "firstname": {
            "type": "string",
            "description": "Firstname"
          },
          "surname": {
            "type": "string",
            "description": "Surname"
          },
          "email": {
            "type": "string",
            "description": "Email"
          },
          "middle_name": {
            "type": "string",
            "default": "",
            "description": "Middle Name"
          },
          "phone_number": {
            "type": "string",
            "default": "",
            "description": "Phone Number"
          },
          "ssn_ein": {
            "type": "string",
            "default": "",
            "description": "SSN/EIN"
          },
          "exempt_employee": {
            "type": "boolean",
            "default": false,
            "description": "Exempt Employee"
          },
          "public_adjuster_license": {
            "type": "boolean",
            "default": false,
            "description": "Is a Public Adjuster with License?"
          },
          "birthday": {
            "type": "string",
            "format": "date-time",
            "description": "Birthay"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Starting Date"
          },
          "position": {
            "$ref": "#/components/schemas/IdDescription",
            "description": "Position"
          },
          "assistant": {
            "$ref": "#/components/schemas/IdDescription",
            "description": "Assistant or Desk Adjuster"
          },
          "emergency_contact_name": {
            "type": "string",
            "description": "Emergency Contact Name"
          },
          "emergency_contact_phone": {
            "type": "string",
            "description": "Emergency Contact Phone Number"
          },
          "notes": {
            "type": "string",
            "default": "",
            "description": "Notes"
          },
          "notes_work": {
            "type": "string",
            "default": "",
            "description": "Notes"
          },
          "image": {
            "type": "string",
            "description": "Employee image"
          },
          "employee_id": {
            "type": "string",
            "description": "Employee internal id"
          },
          "license_id": {
            "type": "string",
            "description": "License id"
          },
          "address": {
            "type": "string",
            "description": "Address"
          },
          "base_salary": {
            "type": "number",
            "default": 0.0,
            "description": "Base salary"
          },
          "recurrency": {
            "$ref": "#/components/schemas/IdDescription",
            "description": "Recurrency"
          },
          "commission": {
            "$ref": "#/components/schemas/IdDescription",
            "description": "Commission percentage"
          },
          "fixed_fee": {
            "type": "number",
            "default": 0.0,
            "description": "Fixed fee per claim"
          },
          "teacher": {
            "$ref": "#/components/schemas/IdDescription",
            "description": "Teacher"
          },
          "teacher_perc": {
            "type": "number",
            "default": 0.0,
            "description": "Teacher percentage"
          },
          "mentor": {
            "$ref": "#/components/schemas/IdDescription",
            "description": "Mentor"
          },
          "mentor_perc": {
            "type": "number",
            "default": 0.0,
            "description": "Mentor percentage"
          },
          "owner_id": {
            "type": "string",
            "description": "Owner Id"
          },
          "owner_name": {
            "type": "string",
            "description": "Owner Name"
          },
          "company_representative": {
            "type": "boolean",
            "default": false,
            "description": "Company Representative?"
          },
          "id": {
            "type": "string",
            "description": "Db id"
          },
          "enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enabled?"
          }
        },
        "x-module-name": "app0.admin.employee",
        "description": "\n    Employee\n    "
      },
      "InsuranceCompany": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name"
          },
          "email": {
            "type": "string",
            "default": "",
            "description": "Email"
          },
          "phone_number": {
            "type": "string",
            "default": "",
            "description": "Phone Number"
          },
          "notes": {
            "type": "string",
            "description": "Notes"
          },
          "image": {
            "type": "string",
            "description": "Company logo"
          },
          "address": {
            "type": "string",
            "description": "Address"
          },
          "aptsuiteunit": {
            "type": "string",
            "description": "Aptsuiteunit"
          },
          "city": {
            "type": "string",
            "description": "City"
          },
          "state": {
            "type": "string",
            "description": "State"
          },
          "zipcode": {
            "type": "string",
            "description": "Zipcode"
          },
          "submission_link": {
            "type": "string",
            "description": "Submission link"
          },
          "alt_emails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Alternative Emails"
          },
          "alt_phones": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Alternative Phone Numbers"
          },
          "open_claim_requirement": {
            "type": "string",
            "description": "Requirement to open a claim"
          },
          "owner_id": {
            "type": "string",
            "description": "Owner Id"
          },
          "owner_name": {
            "type": "string",
            "description": "Owner Name"
          },
          "id": {
            "type": "string",
            "description": "Db id"
          },
          "enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enabled?"
          }
        },
        "x-module-name": "app0.admin.insurance",
        "description": "\n    Insurance Company\n    "
      },
      "Provider": {
        "type": "object",
        "required": [
          "firstname",
          "surname",
          "email"
        ],
        "properties": {
          "firstname": {
            "type": "string",
            "description": "Firstname"
          },
          "surname": {
            "type": "string",
            "description": "Surname"
          },
          "email": {
            "type": "string",
            "description": "Email"
          },
          "middle_name": {
            "type": "string",
            "default": "",
            "description": "Middle Name"
          },
          "phone_number": {
            "type": "string",
            "default": "",
            "description": "Phone Number"
          },
          "ssn_ein": {
            "type": "string",
            "default": "",
            "description": "SSN/EIN"
          },
          "company_name": {
            "type": "string",
            "description": "Company name if provider is company"
          },
          "company_ssn_ein": {
            "type": "string",
            "description": "Company SSN/EIN if provider is company"
          },
          "birthday": {
            "type": "string",
            "format": "date-time",
            "description": "Birthay"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Starting Date"
          },
          "service_types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdDescription"
            },
            "default": [],
            "description": "Type of service"
          },
          "notes": {
            "type": "string",
            "description": "Notes"
          },
          "image": {
            "type": "string",
            "description": "Provider image"
          },
          "address": {
            "type": "string",
            "description": "Address"
          },
          "owner_id": {
            "type": "string",
            "description": "Owner Id"
          },
          "owner_name": {
            "type": "string",
            "description": "Owner Name"
          },
          "user_id": {
            "type": "string",
            "description": "User ID"
          },
          "user_username": {
            "type": "string",
            "description": "User username"
          },
          "id": {
            "type": "string",
            "description": "Db id"
          },
          "enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enabled?"
          }
        },
        "x-module-name": "app0.admin.provider",
        "description": "\n    Service Provider\n    "
      },
      "InsuranceEmployee": {
        "type": "object",
        "required": [
          "firstname",
          "surname",
          "email"
        ],
        "properties": {
          "firstname": {
            "type": "string",
            "description": "Firstname"
          },
          "surname": {
            "type": "string",
            "description": "Surname"
          },
          "email": {
            "type": "string",
            "description": "Email"
          },
          "company_id": {
            "type": "string",
            "default": "",
            "description": "Insurance Company id"
          },
          "company_name": {
            "type": "string",
            "default": "",
            "description": "Insurance Company name"
          },
          "middle_name": {
            "type": "string",
            "default": "",
            "description": "Middle Name"
          },
          "phone_number": {
            "type": "string",
            "default": "",
            "description": "Phone Number"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Roles"
          },
          "notes": {
            "type": "string",
            "default": "",
            "description": "Notes"
          },
          "creation_date": {
            "type": "string",
            "format": "date-time",
            "description": "Creation date"
          },
          "owner_id": {
            "type": "string",
            "description": "Owner Id"
          },
          "owner_name": {
            "type": "string",
            "description": "Owner Name"
          },
          "id": {
            "type": "string",
            "description": "Db id"
          },
          "enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enabled?"
          }
        },
        "x-module-name": "app0.admin.insurance",
        "description": "\n    Insurance Employee\n    "
      },
      "Tmail": {
        "type": "object",
        "required": [
          "name",
          "subject",
          "template"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Key Name"
          },
          "subject": {
            "type": "string",
            "description": "Subject"
          },
          "template": {
            "type": "string",
            "description": "Template file"
          },
          "description": {
            "type": "string",
            "default": "",
            "description": "Description"
          },
          "keywords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "All variables that can be setted"
          },
          "keywords_required": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Mandatory variables that should be setted"
          },
          "owner_id": {
            "type": "string",
            "default": "",
            "description": "owner id"
          },
          "owner_name": {
            "type": "string",
            "default": "",
            "description": "owner name"
          },
          "content": {
            "type": "string",
            "description": "Html Content embedded in template"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Tags"
          },
          "id": {
            "type": "string",
            "description": "Db id"
          },
          "enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enabled?"
          }
        },
        "x-module-name": "app0.admin.tmail",
        "description": "\n    Mail template\n    "
      },
      "RuntimeAppInfo": {
        "type": "object",
        "required": [
          "servers",
          "app_config",
          "effective_events"
        ],
        "properties": {
          "servers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServerInfo"
            }
          },
          "app_config": {
            "$ref": "#/components/schemas/AppConfig"
          },
          "effective_events": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/EventDescriptor"
            }
          }
        },
        "x-module-name": "hopeit.config_manager",
        "description": "\n    Application config information associated to servers at runtime\n    "
      },
      "ServerInfo": {
        "type": "object",
        "required": [
          "host_name",
          "pid"
        ],
        "properties": {
          "host_name": {
            "type": "string"
          },
          "pid": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "default": "in-process"
          }
        },
        "x-module-name": "hopeit.config_manager",
        "description": "\n    Server info associated with runtime apps\n    "
      },
      "AppConfig": {
        "type": "object",
        "required": [
          "app"
        ],
        "properties": {
          "app": {
            "$ref": "#/components/schemas/AppDescriptor"
          },
          "engine": {
            "$ref": "#/components/schemas/AppEngineConfig",
            "default": {
              "import_modules": null,
              "read_stream_timeout": 1000,
              "read_stream_interval": 1000,
              "default_stream_compression": "lz4",
              "default_stream_serialization": "json+base64",
              "track_headers": [
                "track.request_id",
                "track.request_ts"
              ],
              "cors_origin": null
            }
          },
          "app_connections": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AppConnection"
            },
            "default": {}
          },
          "env": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "default": {}
          },
          "events": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/EventDescriptor"
            },
            "default": {}
          },
          "server": {
            "$ref": "#/components/schemas/ServerConfig"
          },
          "plugins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppDescriptor"
            },
            "default": []
          },
          "settings": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "default": {}
          },
          "effective_settings": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        },
        "x-module-name": "hopeit.app.config",
        "description": "\n    App Configuration container\n    "
      },
      "AppDescriptor": {
        "type": "object",
        "required": [
          "name",
          "version"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "x-module-name": "hopeit.app.config",
        "description": "\n    App descriptor\n    "
      },
      "AppEngineConfig": {
        "type": "object",
        "properties": {
          "import_modules": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "read_stream_timeout": {
            "type": "integer",
            "default": 1000
          },
          "read_stream_interval": {
            "type": "integer",
            "default": 1000
          },
          "default_stream_compression": {
            "type": "string",
            "enum": [
              "none",
              "lz4",
              "lz4:0",
              "lz4:16",
              "zip",
              "zip:1",
              "zip:9",
              "gzip",
              "gzip:1",
              "gzip:9",
              "bz2",
              "bz2:1",
              "bz2:9",
              "lzma"
            ],
            "x-enum-name": "Compression",
            "x-module-name": "hopeit.app.config",
            "default": "lz4"
          },
          "default_stream_serialization": {
            "type": "string",
            "enum": [
              "json",
              "json+base64",
              "pickle:3",
              "pickle:4",
              "pickle:5"
            ],
            "x-enum-name": "Serialization",
            "x-module-name": "hopeit.app.config",
            "default": "json+base64"
          },
          "track_headers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "cors_origin": {
            "type": "string"
          }
        },
        "x-module-name": "hopeit.app.config",
        "description": "\n    Engine specific parameters shared among events\n\n    :field import_modules: list of string with the python module names to import to find\n        events and datatype implementations\n    :field read_stream_timeout: timeout in milliseconds to block connection pool when waiting for stream events\n    :field read_stream_interval: delay in milliseconds to wait before attempting a new batch. Use to prevent\n        connection pool to be blocked constantly.\n    :track_headers: list of required X-Track-* headers\n    :cors_origin: allowed CORS origin for web server\n    "
      },
      "AppConnection": {
        "type": "object",
        "required": [
          "name",
          "version"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "client": {
            "type": "string",
            "default": "<<NO CLIENT CONFIGURED>>"
          },
          "settings": {
            "type": "string"
          },
          "plugin_name": {
            "type": "string"
          },
          "plugin_version": {
            "type": "string"
          }
        },
        "x-module-name": "hopeit.app.config",
        "description": "\n    AppConnections: metadata to initialize app client in order to connect\n    and issue requests to other running apps\n\n    :field: name, str: target app name to connect to\n    :field: version, str: target app version\n    :field: client, str: hopeit.app.client.Client class implementation, from available client plugins\n    :field: settings, optional str: key under `settings` section of app config containing connection configuration,\n        if not specified, plugin will lookup its default section usually the plugin name. But in case multiple\n        clients need to be configured, this value can be overridden.\n    "
      },
      "EventDescriptor": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "GET",
              "POST",
              "STREAM",
              "SERVICE",
              "MULTIPART"
            ],
            "x-enum-name": "EventType",
            "x-module-name": "hopeit.app.config"
          },
          "plug_mode": {
            "type": "string",
            "enum": [
              "Standalone",
              "OnApp"
            ],
            "x-enum-name": "EventPlugMode",
            "x-module-name": "hopeit.app.config",
            "default": "Standalone"
          },
          "route": {
            "type": "string"
          },
          "impl": {
            "type": "string"
          },
          "connections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventConnection"
            },
            "default": []
          },
          "read_stream": {
            "$ref": "#/components/schemas/ReadStreamDescriptor"
          },
          "write_stream": {
            "$ref": "#/components/schemas/WriteStreamDescriptor"
          },
          "auth": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "Unsecured",
                "Basic",
                "Bearer",
                "Refresh"
              ],
              "x-enum-name": "AuthType",
              "x-module-name": "hopeit.server.config"
            },
            "default": []
          },
          "setting_keys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "dataobjects": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          }
        },
        "x-module-name": "hopeit.app.config",
        "description": "\n    Event Descriptor: configures event implementation\n\n    :field: type, EventType: type of event i.e.: GET, POST, MULTIPART, STREAM, SERVICE\n    :field: plug_mode, EventPlugMode: defines whether an event defined in a plugin is created in the\n        current app (ON_APP) or it will be created in the original plugin (STANDALONE, default)\n    :field: route, optional str: custom route for endpoint. If not specified route will be derived\n        from `/api/app_name/app_version/event_name`\n    :field: impl, optional str: custom event implementation Python module. If not specified, module\n        with same same as event will be imported.\n    :field: connections, list of EventConnection: specifies dependencies on other apps/endpoints,\n        that can be used by client plugins to call events on external apps\n    :field: read_stream, optional ReadStreamDescriptor: specifies source stream to read from.\n        Valid only for STREAM events.\n    :field: write_stream, optional WriteStreamDescriptor: for any type of events, resultant dataobjects will\n        be published to the specified stream.\n    :field: auth, list of AuthType: supported authentication schemas for this event. If not specified\n        application default will be used.\n    :field: setting_keys, list of str: by default EventContext will have access to the settings section\n        with the same name of the event using `settings = context.settings(datatype=MySettingsType)`.\n        In case additional sections are needed to be accessed from\n        EventContext, then a list of setting keys, including the name of the event if needed,\n        can be specified here. Then access to a `custom` key can be done using\n        `custom_settings = context.settings(key=\"customer\", datatype=MyCustomSettingsType)`\n    :field: dataobjects, list of str: list of full qualified dataobject types that this event can process.\n        When not specified, the engine will inspect the module implementation and find all datatypes supported\n        as payload in the functions defined as `__steps__`. In case of generic functions that support\n        `payload: DataObject` argument, then a list of full qualified datatypes must be specified here.\n    "
      },
      "EventConnection": {
        "type": "object",
        "required": [
          "app_connection",
          "event",
          "type"
        ],
        "properties": {
          "app_connection": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "GET",
              "POST"
            ],
            "x-enum-name": "EventConnectionType",
            "x-module-name": "hopeit.app.config"
          }
        },
        "x-module-name": "hopeit.app.config",
        "description": "\n    EventConnection: describes dependencies on this event when calling\n    event on apps configured in `app_connections` sections. Only events\n    specified are allowed to be invoked using `hopeit.client`\n\n    :field: app_connection, str: key of app entry used in app_connections sections\n    :field: event, str: target event_name to be called\n    :filed: type, EventConnectionType: a valid event connection type, i.e. GET or POST\n    :field: route, optional str: custom route in case event is not attached to default `app/version/event`\n    "
      },
      "ReadStreamDescriptor": {
        "type": "object",
        "required": [
          "name",
          "consumer_group"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "consumer_group": {
            "type": "string"
          },
          "queues": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              "AUTO"
            ]
          }
        },
        "x-module-name": "hopeit.app.config",
        "description": "\n    Configuration to read streams\n\n    :field stream_name: str, base stream name to read\n    :consumer_group: str, consumer group to send to stream processing engine to keep track of\n        next messag to consume\n    :queues: List[str], list of queue names to poll from. Each queue act as separate stream\n        with queue name used as stream name suffix, where `AUTO` queue name means to consume\n        events when no queue where specified at publish time, allowing to consume message with different\n        priorities without waiting for all events in the stream to be consumed.\n        Queues specified in this entry will be consumed by this event\n        on each poll cycle, on the order specified. If not present\n        only AUTO queue will be consumed. Take into account that in applications using multiple\n        queue names, in order to ensure all messages are consumed, all queue names should be listed\n        here including AUTO, except that the app is intentionally designed for certain events to\n        consume only from specific queues. This configuration is manual to allow consuming messages\n        produced by external apps.\n    "
      },
      "WriteStreamDescriptor": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "queues": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              "AUTO"
            ]
          },
          "queue_strategy": {
            "type": "string",
            "enum": [
              "PROPAGATE",
              "DROP"
            ],
            "x-enum-name": "StreamQueueStrategy",
            "x-module-name": "hopeit.app.config",
            "default": "DROP"
          }
        },
        "x-module-name": "hopeit.app.config",
        "description": "\n    Configuration to publish messages to a stream\n\n    :field: name, str: stream name\n    :field: queue, List[str], queue names to be used to publish to stream.\n        Each queue act as separate stream with queue name used as stream name suffix,\n        allowing to publish messages to i.e. a queue that will be consumed with priority,\n        or to multiple queues that will be consumed by different readers.\n        Queue suffix will be propagated through events, allowing an event in a defined queue\n        and successive events in following steps to be consumed using same queue name.\n        Notice that queue will be applied only to messages coming from default queue\n        (where queue is not specified at intial message creation). Messages consumed\n        from other queues will be published using same queue name as they have when consumed.\n    :field queue_stategory: strategy to be used when consuming messages from a stream\n        with a queue name and publishing to another stream. Default is `StreamQueueStrategy.DROP`,\n        so in case of complex stream propagating queue names are configured,\n        `StreamQueueStrategy.PROPAGATE` must be explicitly specified.\n    "
      },
      "ServerConfig": {
        "type": "object",
        "properties": {
          "streams": {
            "$ref": "#/components/schemas/StreamsConfig",
            "default": {
              "stream_manager": "hopeit.streams.NoStreamManager",
              "connection_str": "<<NoStreamManager>>",
              "delay_auto_start_seconds": 3
            }
          },
          "logging": {
            "$ref": "#/components/schemas/LoggingConfig",
            "default": {
              "log_level": "INFO",
              "log_path": "logs/"
            }
          },
          "auth": {
            "$ref": "#/components/schemas/AuthConfig",
            "default": {
              "secrets_location": ".secrets/",
              "auth_passphrase": "",
              "enabled": false,
              "create_keys": false,
              "domain": null,
              "encryption_algorithm": "RS256",
              "default_auth_methods": [
                "Unsecured"
              ]
            }
          },
          "api": {
            "$ref": "#/components/schemas/APIConfig",
            "default": {
              "docs_path": null
            }
          },
          "engine_version": {
            "type": "string",
            "default": "0.15.1"
          }
        },
        "x-module-name": "hopeit.server.config",
        "description": "\n    Server configuration\n    "
      },
      "StreamsConfig": {
        "type": "object",
        "properties": {
          "stream_manager": {
            "type": "string",
            "default": "hopeit.streams.NoStreamManager"
          },
          "connection_str": {
            "type": "string",
            "default": "<<NoStreamManager>>"
          },
          "delay_auto_start_seconds": {
            "type": "integer",
            "default": 3
          }
        },
        "x-module-name": "hopeit.server.config",
        "description": "\n    :field connection_str: str, url to connect to streams server: i.e. redis://localhost:6379\n    "
      },
      "LoggingConfig": {
        "type": "object",
        "properties": {
          "log_level": {
            "type": "string",
            "default": "INFO"
          },
          "log_path": {
            "type": "string",
            "default": "logs/"
          }
        },
        "x-module-name": "hopeit.server.config",
        "description": "LoggingConfig(log_level: str = 'INFO', log_path: str = 'logs/')"
      },
      "AuthConfig": {
        "type": "object",
        "required": [
          "secrets_location",
          "auth_passphrase"
        ],
        "properties": {
          "secrets_location": {
            "type": "string"
          },
          "auth_passphrase": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean",
            "default": true
          },
          "create_keys": {
            "type": "boolean",
            "default": false
          },
          "domain": {
            "type": "string"
          },
          "encryption_algorithm": {
            "type": "string",
            "default": "RS256"
          },
          "default_auth_methods": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "Unsecured",
                "Basic",
                "Bearer",
                "Refresh"
              ],
              "x-enum-name": "AuthType",
              "x-module-name": "hopeit.server.config"
            },
            "default": []
          }
        },
        "x-module-name": "hopeit.server.config",
        "description": "\n    Server configuration to handle authorization tokens\n    "
      },
      "APIConfig": {
        "type": "object",
        "properties": {
          "docs_path": {
            "type": "string"
          }
        },
        "x-module-name": "hopeit.server.config",
        "description": "\n    Config for Open API docs page\n    "
      },
      "RuntimeApps": {
        "type": "object",
        "required": [
          "apps"
        ],
        "properties": {
          "apps": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/RuntimeAppInfo"
            }
          },
          "server_status": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "enum": [
                "ALIVE",
                "ERROR"
              ],
              "x-enum-name": "ServerStatus",
              "x-module-name": "hopeit.config_manager"
            },
            "default": {}
          }
        },
        "x-module-name": "hopeit.config_manager",
        "description": "\n    Combined App Config and Server Status information for running apps\n    "
      }
    },
    "securitySchemes": {
      "auth.basic": {
        "type": "http",
        "scheme": "basic"
      },
      "auth.bearer": {
        "type": "http",
        "scheme": "bearer"
      },
      "platform_auth.1x0.refresh": {
        "type": "apiKey",
        "in": "cookie",
        "name": "platform_auth.1x0.refresh"
      }
    }
  },
  "security": []
}